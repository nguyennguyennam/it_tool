<div class="flex w-full max-w-4xl flex-col items-center justify-center gap-8">
  <div
    class="flex w-full flex-col items-start gap-2 border-b-2 border-zinc-700 py-4"
  >
    <h1
      class="dark:from-cotton-candy dark:to-cadillac from-cadillac to-bashful bg-gradient-to-r bg-clip-text text-3xl font-bold text-transparent"
    >
      Base64 String
    </h1>
    <p class="w-full">
      Convert a data string into a more compact, usually used to encode bit
      strings for images, base64 encoded string.
    </p>
  </div>

  <div class="flex w-full flex-col gap-4">
    <label class="flex flex-col gap-2 font-semibold">
      Input String
      <textarea
        id="input-string"
        class="h-32 resize-none rounded-md bg-zinc-300 px-4 py-2 font-normal ring-2 ring-transparent duration-200 outline-none placeholder:opacity-50 hover:ring-pink-500/50 focus:ring-pink-500 dark:bg-zinc-700 dark:hover:ring-purple-500/50 dark:focus:ring-purple-500"
        placeholder="Enter string to encode/decode..."
      >
lunaluny</textarea
      >
    </label>

    <div class="flex flex-row gap-4 self-end">
      <button
        id="encode"
        class="from-cadillac to-bashful dark:from-cotton-candy dark:to-cadillac text-pearl cursor-pointer rounded-md bg-gradient-to-r px-4 py-2 font-semibold duration-200 hover:bg-transparent dark:text-black dark:hover:bg-transparent"
      >
        Encode
      </button>
      <button
        id="decode"
        class="from-cadillac to-bashful dark:from-cotton-candy dark:to-cadillac text-pearl cursor-pointer rounded-md bg-gradient-to-r px-4 py-2 font-semibold duration-200 hover:bg-transparent dark:text-black dark:hover:bg-transparent"
      >
        Decode
      </button>
    </div>
  </div>

  <div class="flex w-full flex-col gap-4">
    <h2 class="font-semibold">Result</h2>

    <div
      class="flex flex-col rounded-md bg-zinc-300 px-4 py-2 dark:bg-zinc-700"
    >
      <textarea
        id="output-result"
        readonly
        class="h-32 w-full resize-none font-normal outline-none dark:bg-zinc-700 dark:text-white"
        placeholder="Base64 encoded/decoded string will appear here"
      ></textarea>
      <button
        id="output-copy"
        class="dark:fill-pearl dark:hover:fill-pearl/50 group relative mt-2 shrink-0 cursor-pointer! self-end fill-zinc-950 hover:fill-zinc-950/50"
      >
        <span
          class="dark:bg-pearl text-pearl absolute bottom-0 left-1/2 z-10 hidden -translate-x-1/2 -translate-y-full items-center justify-center rounded-md bg-zinc-500 px-4 py-2 font-semibold uppercase group-hover:flex dark:text-black"
          >Copy</span
        >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 -960 960 960"
          class="size-6"
        >
          <path
            d="M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z"
          />
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  $(document).ready(function () {
    $("#encode").click(() => {
      const inputString = $("#input-string").val();
      const outputResult = $("#output-result");
      try {
        const base64String = btoa(inputString);
        outputResult.val(base64String);
      } catch (error) {
        outputResult.val("Error encoding string.");
        console.error("Encoding error:", error);
      }
    });

    $("#decode").click(() => {
      const inputString = $("#input-string").val();
      const outputResult = $("#output-result");
      try {
        const decodedString = atob(inputString);
        outputResult.val(decodedString);
      } catch (error) {
        outputResult.val("Error decoding Base64 string.");
        console.error("Decoding error:", error);
      }
    });

    $("#output-copy").click(() => {
      const result = $("#output-result").val();
      if (result) {
        navigator.clipboard.writeText(result);
        const copyButton = $("#output-copy");
        const span = copyButton.find("span");
        span.text("Copied!");
        setTimeout(() => {
          span.text("Copy");
        }, 3000);
      }
    });
  });
</script>
