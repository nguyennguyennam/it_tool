<script src="https://cdnjs.cloudflare.com/ajax/libs/chance/1.1.11/chance.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<div class="flex flex-col gap-4 p-8 font-poppins">
    <h1 class="text-3xl font-bold mb-4 text-center font-poppins">Password Generator</h1>
    <p class="text-balance text-center">Generate a strong and secure password with customizable options.</p>

    <div class="mb-4">
        <label for="passwordLength" class="block mb-2 text-sm font-semibold">Password Length:</label>
        <div class="relative">
            <input
                id="passwordLength"
                type="range"
                min="8"
                max="32"
                value="16"
                class="w-full h-3 bg-gray-200 rounded-lg appearance-none cursor-pointer focus:outline-none focus:ring-2 focus:ring-indigo-500"
                oninput="updateTooltip(this)"
            />
            <output
                id="rangeValue"
                class="absolute -top-8 left-1/2 -translate-x-1/2 bg-indigo-500 text-white text-xs py-1 px-2 rounded-md pointer-events-none opacity-0 transition-opacity duration-150"
            >16</output>
        </div>
    </div>

    <div class="grid grid-cols-2 gap-4 mb-4">
        <div>
            <input type="checkbox" id="includeUppercase" checked class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
            <label for="includeUppercase" class="ml-2 text-sm">Include Uppercase</label>
        </div>
        <div>
            <input type="checkbox" id="includeLowercase" checked class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
            <label for="includeLowercase" class="ml-2 text-sm">Include Lowercase</label>
        </div>
        <div>
            <input type="checkbox" id="includeNumbers" checked class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
            <label for="includeNumbers" class="ml-2 text-sm">Include Numbers</label>
        </div>
        <div>
            <input type="checkbox" id="includeSymbols" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
            <label for="includeSymbols" class="ml-2 text-sm">Include Symbols</label>
        </div>
    </div>

    <div class="mb-4">
        <label for="generatedPassword" class="block mb-2 text-sm font-semibold">Generated Password:</label>
        <div class="relative">
            <input type="text" id="generatedPassword" value="Click 'Generate' to create a password" class="w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 pr-10" readonly>
            <button id="copyButton" class="absolute inset-y-0 right-0 flex items-center px-3 focus:outline-none cursor-pointer" title="Copy to clipboard" onclick="copyPassword()">
                <svg xmlns="https://www.svgrepo.com/svg/3110/copy" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-5 w-5">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002-2h2a2 2 0 002 2m-2 2h2m-2-2h2m-2 4h2m-2-2h2m-2-2h2m-2-2h2" />
                </svg>
                <div id="copy_password_text" class="absolute bottom-0 left-1/2  -translate-x-1/2 -translate-y-full bg-gray-800 text-white text-xs py-1 px-2 rounded-md opacity-0 transition-opacity duration-200 pointer-events-none">Copy Password</div>
            </button>
        </div>
    </div>

    <button onclick="generatePassword()" class="cursor-pointer! bg-cotton-candy hover:bg-cadillac text-black font-bold py-2 px-4 rounded-xl">
        Generate Password
    </button>

    <div id="passwordStrength" class="mt-4 text-sm text-center"></div>
</div>

<style>
    /* Styling for the tooltip */
    #rangeValue {
        opacity: 0;
        transition: opacity 0.15s ease-in-out;
    }

    #passwordLength:focus + #rangeValue,
    #passwordLength:hover + #rangeValue {
        opacity: 1;
    }
</style>

<script>
function generatePassword() {
    const $passwordLengthInput = $('#passwordLength');
    const $includeUppercase = $('#includeUppercase');
    const $includeLowercase = $('#includeLowercase');
    const $includeNumbers = $('#includeNumbers');
    const $includeSymbols = $('#includeSymbols');
    const $generatedPasswordInput = $('#generatedPassword');
    const $passwordStrength = $('#passwordStrength');

    const length = parseInt($passwordLengthInput.val());
    const uppercase = $includeUppercase.prop('checked');
    const lowercase = $includeLowercase.prop('checked');
    const numbers = $includeNumbers.prop('checked');
    const symbols = $includeSymbols.prop('checked');

    let characters = '';
    if (uppercase) characters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    if (lowercase) characters += 'abcdefghijklmnopqrstuvwxyz';
    if (numbers) characters += '0123456789';
    if (symbols) characters += '!@#$%^&*()_+=-`~[]\\{}|;\':",./<>?';

    if (!characters) {
        $generatedPasswordInput.val('Please select at least one option.');
        $passwordStrength.text('');
        return;
    }

    let password = '';
    for (let i = 0; i < length; i++) {
        password += chance.character({ pool: characters });
    }

    $generatedPasswordInput.val(password);
    updatePasswordStrength(password);
}
function copyPassword() {
    const $generatedPasswordInput = $('#generatedPassword');
    const $copyButton = $('#copyButton');
    const $copyPasswordText = $('#copy_password_text');
    const password = $generatedPasswordInput.val();

    if (password === 'Click \'Generate\' to create a password') {
        alert('Please generate a password first!');
        return;
    }
    navigator.clipboard.writeText(password).then(() => {
        $copyPasswordText.text('Copied!').removeClass('opacity-0');
        setTimeout(() => {
            $copyPasswordText.addClass('opacity-0');
        }, 1500);
       
    }).catch(err => {
        console.error('Error copying password: ', err);
        $copyPasswordText.text('Copy Failed!');
        setTimeout(() => {
            $copyPasswordText.addClass('opacity-0');
        }, 1500);
    });
}


function updatePasswordStrength(password) {
    const $passwordStrength = $('#passwordStrength');
    let strength = '';
    let colorClass = '';
    if (password.length < 8) {
        strength = 'Too short';
        colorClass = 'text-red-500';
    } else if (password.length < 12) {
        strength = 'Weak';
        colorClass = 'text-yellow-500';
    } else if (password.length < 16) {
        strength = 'Medium';
        colorClass = 'text-green-500';
    } else {
        strength = 'Strong';
        colorClass = 'text-green-700 font-semibold';
    }
    $passwordStrength.text(`Strength: ${strength}`).removeClass('text-red-500 text-yellow-500 text-green-500 text-green-700 font-semibold').addClass(colorClass);
}

$(document).ready(function() {
    const $passwordLengthInput = $('#passwordLength');
    const $rangeValueOutput = $('#rangeValue');
    const $copyButton = $('#copyButton');
    const $copyPasswordText = $('#copy_password_text');

    function updateTooltip(input) {
        const $input = $(input);
        $rangeValueOutput.text($input.val());

        const value = parseInt($input.val());
        const min = parseInt($input.prop('min')) || 0;
        const max = parseInt($input.prop('max')) || 100;

        const thumbPosition = (value - min) / (max - min);
        const outputWidth = $rangeValueOutput.outerWidth();
        const inputWidth = $input.outerWidth();
        const thumbOffset = thumbPosition * (inputWidth - 16); // Approximate thumb width
        const outputOffset = thumbOffset - (outputWidth / 2) + 8; // Adjustment for centering

        $rangeValueOutput.css('left', outputOffset + 'px');
    }

    // Initialize tooltip position on load
    updateTooltip($passwordLengthInput[0]); // Pass the DOM element

    $passwordLengthInput.on('input', function() {
        updateTooltip(this);
    });

    $copyButton.on('mouseenter', function() {
        $copyPasswordText.text('Copy Password').removeClass('opacity-0');
    });

    $copyButton.on('mouseleave', function() {
        $copyPasswordText.addClass('opacity-0');
    });
});

</script>